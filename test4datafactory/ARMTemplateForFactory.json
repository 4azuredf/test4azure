{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "test4datafactory"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureSqlDatabase_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureSqlDatabase'"
		},
		"Blob_storage_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Blob_storage'"
		},
		"Input_Blob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Input_Blob'"
		},
		"Output_SQL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Output_SQL'"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Sales CSV to SQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "order_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "order_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "order_date",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "order_date",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "status",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "item_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "item_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "sku",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "sku",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "qty_ordered",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "qty_ordered",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "price",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "price",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "value",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "value",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "discount_amount",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "discount_amount",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "total",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "total",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 18
										}
									},
									{
										"source": {
											"name": "category",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "category",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "payment_method",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "payment_method",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "bi_st",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "bi_st",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "cust_id",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "cust_id",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "year",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "year",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "month",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "month",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ref_num",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ref_num",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "name_prefix",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "name_prefix",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "first_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "first_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "middle_initial",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "middle_initial",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "last_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "last_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "gender",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "gender",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "age",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "age",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "full_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "full_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "e_mail",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "e_mail",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "customer_since",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "customer_since",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ssn",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ssn",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "phone_no",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "phone_no",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "place_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "place_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "country",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "country",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "city",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "city",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "state",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "state",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "zip",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "zip",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "region",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "region",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "user_name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "user_name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "discount_percent",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "discount_percent",
											"type": "Decimal",
											"physicalType": "decimal",
											"scale": 3,
											"precision": 18
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "sales_CSV",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "sales_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Fact Table Creation",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Sales CSV to SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreatingFactTable",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"TempStage": {},
									"UploadingToSql": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Dim Orders Creation",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Fact Table Creation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreatingDimOrders",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"source1": {},
									"UploadingToSql": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Dim Items Creation",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Dim Orders Creation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreatingDimItems",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"TempStage": {},
									"UploadingToSQL": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Dim Customers Creation",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Dim Items Creation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreatingDimCustomers",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"TempStage": {},
									"UploadingToSql": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Dim Regions Creation",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Dim Customers Creation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreatingDimRegions",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"TempStage": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Dim Date Creation",
						"type": "ExecuteDataFlow",
						"dependsOn": [
							{
								"activity": "Dim Regions Creation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "CreatingDimDate",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"TempStage": {},
									"UploadingToSql": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sales_CSV')]",
				"[concat(variables('factoryId'), '/datasets/sales_SQL')]",
				"[concat(variables('factoryId'), '/dataflows/CreatingFactTable')]",
				"[concat(variables('factoryId'), '/dataflows/CreatingDimOrders')]",
				"[concat(variables('factoryId'), '/dataflows/CreatingDimItems')]",
				"[concat(variables('factoryId'), '/dataflows/CreatingDimCustomers')]",
				"[concat(variables('factoryId'), '/dataflows/CreatingDimRegions')]",
				"[concat(variables('factoryId'), '/dataflows/CreatingDimDate')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimCustomers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Output_SQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "name_prefix",
						"type": "varchar"
					},
					{
						"name": "first_name",
						"type": "varchar"
					},
					{
						"name": "middle_initial",
						"type": "varchar"
					},
					{
						"name": "last_name",
						"type": "varchar"
					},
					{
						"name": "gender",
						"type": "varchar"
					},
					{
						"name": "age",
						"type": "int",
						"precision": 10
					},
					{
						"name": "customer_since",
						"type": "varchar"
					},
					{
						"name": "phone_no",
						"type": "varchar"
					},
					{
						"name": "e_mail",
						"type": "varchar"
					},
					{
						"name": "user_name",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dim_customers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Output_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimDate')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Output_SQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "month",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dim_date"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Output_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimItems')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Output_SQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "price",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "category",
						"type": "varchar"
					},
					{
						"name": "sku",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dim_items"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Output_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimOrders')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Output_SQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "status",
						"type": "varchar"
					},
					{
						"name": "ref_num",
						"type": "int",
						"precision": 10
					},
					{
						"name": "discount_percent",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "discount_amount",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "payment_method",
						"type": "varchar"
					},
					{
						"name": "value",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dim_orders"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Output_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DimRegions')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Output_SQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "region",
						"type": "varchar"
					},
					{
						"name": "country",
						"type": "varchar"
					},
					{
						"name": "state",
						"type": "varchar"
					},
					{
						"name": "city",
						"type": "varchar"
					},
					{
						"name": "place_name",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "dim_regions"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Output_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FactTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Output_SQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "order_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "cust_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "item_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "qty_ordered",
						"type": "int",
						"precision": 10
					},
					{
						"name": "total",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "date_id",
						"type": "nvarchar"
					},
					{
						"name": "region_id",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "fact_table"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Output_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sales_CSV')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Input_Blob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "sales - limited.csv",
						"container": "input"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "order_id",
						"type": "String"
					},
					{
						"name": "order_date",
						"type": "String"
					},
					{
						"name": "status",
						"type": "String"
					},
					{
						"name": "item_id",
						"type": "String"
					},
					{
						"name": "sku",
						"type": "String"
					},
					{
						"name": "qty_ordered",
						"type": "String"
					},
					{
						"name": "price",
						"type": "String"
					},
					{
						"name": "value",
						"type": "String"
					},
					{
						"name": "discount_amount",
						"type": "String"
					},
					{
						"name": "total",
						"type": "String"
					},
					{
						"name": "category",
						"type": "String"
					},
					{
						"name": "payment_method",
						"type": "String"
					},
					{
						"name": "bi_st",
						"type": "String"
					},
					{
						"name": "cust_id",
						"type": "String"
					},
					{
						"name": "year",
						"type": "String"
					},
					{
						"name": "month",
						"type": "String"
					},
					{
						"name": "ref_num",
						"type": "String"
					},
					{
						"name": "name_prefix",
						"type": "String"
					},
					{
						"name": "first_name",
						"type": "String"
					},
					{
						"name": "middle_initial",
						"type": "String"
					},
					{
						"name": "last_name",
						"type": "String"
					},
					{
						"name": "gender",
						"type": "String"
					},
					{
						"name": "age",
						"type": "String"
					},
					{
						"name": "full_name",
						"type": "String"
					},
					{
						"name": "e_mail",
						"type": "String"
					},
					{
						"name": "customer_since",
						"type": "String"
					},
					{
						"name": "ssn",
						"type": "String"
					},
					{
						"name": "phone_no",
						"type": "String"
					},
					{
						"name": "place_name",
						"type": "String"
					},
					{
						"name": "country",
						"type": "String"
					},
					{
						"name": "city",
						"type": "String"
					},
					{
						"name": "state",
						"type": "String"
					},
					{
						"name": "zip",
						"type": "String"
					},
					{
						"name": "region",
						"type": "String"
					},
					{
						"name": "user_name",
						"type": "String"
					},
					{
						"name": "discount_percent",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Input_Blob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sales_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Output_SQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "order_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "order_date",
						"type": "varchar"
					},
					{
						"name": "status",
						"type": "varchar"
					},
					{
						"name": "item_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "sku",
						"type": "varchar"
					},
					{
						"name": "qty_ordered",
						"type": "int",
						"precision": 10
					},
					{
						"name": "price",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "value",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "discount_amount",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "total",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					},
					{
						"name": "category",
						"type": "varchar"
					},
					{
						"name": "payment_method",
						"type": "varchar"
					},
					{
						"name": "bi_st",
						"type": "varchar"
					},
					{
						"name": "cust_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "year",
						"type": "int",
						"precision": 10
					},
					{
						"name": "month",
						"type": "varchar"
					},
					{
						"name": "ref_num",
						"type": "int",
						"precision": 10
					},
					{
						"name": "name_prefix",
						"type": "varchar"
					},
					{
						"name": "first_name",
						"type": "varchar"
					},
					{
						"name": "middle_initial",
						"type": "varchar"
					},
					{
						"name": "last_name",
						"type": "varchar"
					},
					{
						"name": "gender",
						"type": "varchar"
					},
					{
						"name": "age",
						"type": "int",
						"precision": 10
					},
					{
						"name": "full_name",
						"type": "varchar"
					},
					{
						"name": "e_mail",
						"type": "varchar"
					},
					{
						"name": "customer_since",
						"type": "varchar"
					},
					{
						"name": "ssn",
						"type": "varchar"
					},
					{
						"name": "phone_no",
						"type": "varchar"
					},
					{
						"name": "place_name",
						"type": "varchar"
					},
					{
						"name": "country",
						"type": "varchar"
					},
					{
						"name": "city",
						"type": "varchar"
					},
					{
						"name": "state",
						"type": "varchar"
					},
					{
						"name": "zip",
						"type": "int",
						"precision": 10
					},
					{
						"name": "region",
						"type": "varchar"
					},
					{
						"name": "user_name",
						"type": "varchar"
					},
					{
						"name": "discount_percent",
						"type": "decimal",
						"precision": 18,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "sales_table"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Output_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabase')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('AzureSqlDatabase_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Blob_storage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Blob_storage_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Input_Blob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Input_Blob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Output_SQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Output_SQL_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreatingDimCustomers')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "sales_SQL",
								"type": "DatasetReference"
							},
							"name": "TempStage"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DimCustomers",
								"type": "DatasetReference"
							},
							"name": "UploadingToSql"
						}
					],
					"transformations": [
						{
							"name": "ColumnsSelection"
						}
					],
					"scriptLines": [
						"source(output(",
						"          order_id as integer,",
						"          order_date as string,",
						"          status as string,",
						"          item_id as integer,",
						"          sku as string,",
						"          qty_ordered as integer,",
						"          price as decimal(18,3),",
						"          value as decimal(18,3),",
						"          discount_amount as decimal(18,3),",
						"          total as decimal(18,3),",
						"          category as string,",
						"          payment_method as string,",
						"          bi_st as string,",
						"          cust_id as integer,",
						"          year as integer,",
						"          month as string,",
						"          ref_num as integer,",
						"          name_prefix as string,",
						"          first_name as string,",
						"          middle_initial as string,",
						"          last_name as string,",
						"          gender as string,",
						"          age as integer,",
						"          full_name as string,",
						"          e_mail as string,",
						"          customer_since as string,",
						"          ssn as string,",
						"          phone_no as string,",
						"          place_name as string,",
						"          country as string,",
						"          city as string,",
						"          state as string,",
						"          zip as integer,",
						"          region as string,",
						"          user_name as string,",
						"          discount_percent as decimal(18,3)",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: true,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> TempStage",
						"TempStage select(mapColumn(",
						"          id = cust_id,",
						"          name_prefix,",
						"          first_name,",
						"          middle_initial,",
						"          last_name,",
						"          gender,",
						"          age,",
						"          e_mail,",
						"          customer_since,",
						"          phone_no,",
						"          user_name",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ColumnsSelection",
						"ColumnsSelection sink(allowSchemaDrift: false,",
						"     validateSchema: true,",
						"     input(",
						"          id as integer,",
						"          name_prefix as string,",
						"          first_name as string,",
						"          middle_initial as string,",
						"          last_name as string,",
						"          gender as string,",
						"          age as integer,",
						"          customer_since as string,",
						"          phone_no as string,",
						"          e_mail as string,",
						"          user_name as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id,",
						"          name_prefix,",
						"          first_name,",
						"          middle_initial,",
						"          last_name,",
						"          gender,",
						"          age,",
						"          customer_since,",
						"          phone_no,",
						"          e_mail,",
						"          user_name",
						"     )) ~> UploadingToSql"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sales_SQL')]",
				"[concat(variables('factoryId'), '/datasets/DimCustomers')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreatingDimDate')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "sales_SQL",
								"type": "DatasetReference"
							},
							"name": "TempStage"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DimDate",
								"type": "DatasetReference"
							},
							"name": "UploadingToSql"
						}
					],
					"transformations": [
						{
							"name": "ColumnsSelection"
						}
					],
					"scriptLines": [
						"source(output(",
						"          order_id as integer,",
						"          order_date as string,",
						"          status as string,",
						"          item_id as integer,",
						"          sku as string,",
						"          qty_ordered as integer,",
						"          price as decimal(18,3),",
						"          value as decimal(18,3),",
						"          discount_amount as decimal(18,3),",
						"          total as decimal(18,3),",
						"          category as string,",
						"          payment_method as string,",
						"          bi_st as string,",
						"          cust_id as integer,",
						"          year as integer,",
						"          month as string,",
						"          ref_num as integer,",
						"          name_prefix as string,",
						"          first_name as string,",
						"          middle_initial as string,",
						"          last_name as string,",
						"          gender as string,",
						"          age as integer,",
						"          full_name as string,",
						"          e_mail as string,",
						"          customer_since as string,",
						"          ssn as string,",
						"          phone_no as string,",
						"          place_name as string,",
						"          country as string,",
						"          city as string,",
						"          state as string,",
						"          zip as integer,",
						"          region as string,",
						"          user_name as string,",
						"          discount_percent as decimal(18,3)",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> TempStage",
						"TempStage select(mapColumn(",
						"          id = order_date,",
						"          year,",
						"          month",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ColumnsSelection",
						"ColumnsSelection sink(allowSchemaDrift: false,",
						"     validateSchema: true,",
						"     input(",
						"          id as string,",
						"          year as integer,",
						"          month as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id,",
						"          year,",
						"          month",
						"     )) ~> UploadingToSql"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sales_SQL')]",
				"[concat(variables('factoryId'), '/datasets/DimDate')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreatingDimItems')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "sales_SQL",
								"type": "DatasetReference"
							},
							"name": "TempStage"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DimItems",
								"type": "DatasetReference"
							},
							"name": "UploadingToSQL"
						}
					],
					"transformations": [
						{
							"name": "ColumnsSelection"
						}
					],
					"scriptLines": [
						"source(output(",
						"          order_id as integer,",
						"          order_date as string,",
						"          status as string,",
						"          item_id as integer,",
						"          sku as string,",
						"          qty_ordered as integer,",
						"          price as decimal(18,3),",
						"          value as decimal(18,3),",
						"          discount_amount as decimal(18,3),",
						"          total as decimal(18,3),",
						"          category as string,",
						"          payment_method as string,",
						"          bi_st as string,",
						"          cust_id as integer,",
						"          year as integer,",
						"          month as string,",
						"          ref_num as integer,",
						"          name_prefix as string,",
						"          first_name as string,",
						"          middle_initial as string,",
						"          last_name as string,",
						"          gender as string,",
						"          age as integer,",
						"          full_name as string,",
						"          e_mail as string,",
						"          customer_since as string,",
						"          ssn as string,",
						"          phone_no as string,",
						"          place_name as string,",
						"          country as string,",
						"          city as string,",
						"          state as string,",
						"          zip as integer,",
						"          region as string,",
						"          user_name as string,",
						"          discount_percent as decimal(18,3)",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: true,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> TempStage",
						"TempStage select(mapColumn(",
						"          id = item_id,",
						"          sku,",
						"          price,",
						"          category",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ColumnsSelection",
						"ColumnsSelection sink(allowSchemaDrift: false,",
						"     validateSchema: true,",
						"     input(",
						"          id as integer,",
						"          price as decimal(18,3),",
						"          category as string,",
						"          sku as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id,",
						"          price,",
						"          category,",
						"          sku",
						"     )) ~> UploadingToSQL"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sales_SQL')]",
				"[concat(variables('factoryId'), '/datasets/DimItems')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreatingDimOrders')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "sales_SQL",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DimOrders",
								"type": "DatasetReference"
							},
							"name": "UploadingToSql"
						}
					],
					"transformations": [
						{
							"name": "select1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          order_id as integer,",
						"          order_date as string,",
						"          status as string,",
						"          item_id as integer,",
						"          sku as string,",
						"          qty_ordered as integer,",
						"          price as decimal(18,3),",
						"          value as decimal(18,3),",
						"          discount_amount as decimal(18,3),",
						"          total as decimal(18,3),",
						"          category as string,",
						"          payment_method as string,",
						"          bi_st as string,",
						"          cust_id as integer,",
						"          year as integer,",
						"          month as string,",
						"          ref_num as integer,",
						"          name_prefix as string,",
						"          first_name as string,",
						"          middle_initial as string,",
						"          last_name as string,",
						"          gender as string,",
						"          age as integer,",
						"          full_name as string,",
						"          e_mail as string,",
						"          customer_since as string,",
						"          ssn as string,",
						"          phone_no as string,",
						"          place_name as string,",
						"          country as string,",
						"          city as string,",
						"          state as string,",
						"          zip as integer,",
						"          region as string,",
						"          user_name as string,",
						"          discount_percent as decimal(18,3)",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: true,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> source1",
						"source1 select(mapColumn(",
						"          id = order_id,",
						"          status,",
						"          value,",
						"          discount_amount,",
						"          ref_num,",
						"          discount_percent,",
						"          payment_method",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 sink(allowSchemaDrift: false,",
						"     validateSchema: true,",
						"     input(",
						"          id as integer,",
						"          status as string,",
						"          ref_num as integer,",
						"          discount_percent as decimal(18,3),",
						"          discount_amount as decimal(18,3),",
						"          payment_method as string,",
						"          value as decimal(18,3)",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id,",
						"          status,",
						"          ref_num,",
						"          discount_percent,",
						"          discount_amount,",
						"          payment_method,",
						"          value",
						"     )) ~> UploadingToSql"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sales_SQL')]",
				"[concat(variables('factoryId'), '/datasets/DimOrders')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreatingDimRegions')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "sales_SQL",
								"type": "DatasetReference"
							},
							"name": "TempStage"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DimRegions",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "ColumnsSelection"
						}
					],
					"scriptLines": [
						"source(output(",
						"          order_id as integer,",
						"          order_date as string,",
						"          status as string,",
						"          item_id as integer,",
						"          sku as string,",
						"          qty_ordered as integer,",
						"          price as decimal(18,3),",
						"          value as decimal(18,3),",
						"          discount_amount as decimal(18,3),",
						"          total as decimal(18,3),",
						"          category as string,",
						"          payment_method as string,",
						"          bi_st as string,",
						"          cust_id as integer,",
						"          year as integer,",
						"          month as string,",
						"          ref_num as integer,",
						"          name_prefix as string,",
						"          first_name as string,",
						"          middle_initial as string,",
						"          last_name as string,",
						"          gender as string,",
						"          age as integer,",
						"          full_name as string,",
						"          e_mail as string,",
						"          customer_since as string,",
						"          ssn as string,",
						"          phone_no as string,",
						"          place_name as string,",
						"          country as string,",
						"          city as string,",
						"          state as string,",
						"          zip as integer,",
						"          region as string,",
						"          user_name as string,",
						"          discount_percent as decimal(18,3)",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: true,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> TempStage",
						"TempStage select(mapColumn(",
						"          place_name,",
						"          country,",
						"          city,",
						"          state,",
						"          id = zip,",
						"          region",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ColumnsSelection",
						"ColumnsSelection sink(allowSchemaDrift: false,",
						"     validateSchema: true,",
						"     input(",
						"          id as integer,",
						"          region as string,",
						"          country as string,",
						"          state as string,",
						"          city as string,",
						"          place_name as string",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id,",
						"          region,",
						"          country,",
						"          state,",
						"          city,",
						"          place_name",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sales_SQL')]",
				"[concat(variables('factoryId'), '/datasets/DimRegions')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreatingFactTable')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "sales_SQL",
								"type": "DatasetReference"
							},
							"name": "TempStage"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "FactTable",
								"type": "DatasetReference"
							},
							"name": "UploadingToSql"
						}
					],
					"transformations": [
						{
							"name": "ColumnsSelection"
						},
						{
							"name": "PrimaryKeyID"
						}
					],
					"scriptLines": [
						"source(output(",
						"          order_id as integer,",
						"          order_date as string,",
						"          status as string,",
						"          item_id as integer,",
						"          sku as string,",
						"          qty_ordered as integer,",
						"          price as decimal(18,3),",
						"          value as decimal(18,3),",
						"          discount_amount as decimal(18,3),",
						"          total as decimal(18,3),",
						"          category as string,",
						"          payment_method as string,",
						"          bi_st as string,",
						"          cust_id as integer,",
						"          year as integer,",
						"          month as string,",
						"          ref_num as integer,",
						"          name_prefix as string,",
						"          first_name as string,",
						"          middle_initial as string,",
						"          last_name as string,",
						"          gender as string,",
						"          age as integer,",
						"          full_name as string,",
						"          e_mail as string,",
						"          customer_since as string,",
						"          ssn as string,",
						"          phone_no as string,",
						"          place_name as string,",
						"          country as string,",
						"          city as string,",
						"          state as string,",
						"          zip as integer,",
						"          region as string,",
						"          user_name as string,",
						"          discount_percent as decimal(18,3)",
						"     ),",
						"     allowSchemaDrift: false,",
						"     validateSchema: true,",
						"     isolationLevel: 'READ_UNCOMMITTED',",
						"     format: 'table') ~> TempStage",
						"TempStage select(mapColumn(",
						"          order_id,",
						"          item_id,",
						"          qty_ordered,",
						"          total,",
						"          cust_id,",
						"          date_id = order_date,",
						"          region_id = zip",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> ColumnsSelection",
						"ColumnsSelection keyGenerate(output(id as long),",
						"     startAt: 1L,",
						"     stepValue: 1L) ~> PrimaryKeyID",
						"PrimaryKeyID sink(allowSchemaDrift: true,",
						"     validateSchema: true,",
						"     input(",
						"          id as integer,",
						"          order_id as integer,",
						"          cust_id as integer,",
						"          item_id as integer,",
						"          qty_ordered as integer,",
						"          total as decimal(18,3),",
						"          date_id as string,",
						"          region_id as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     recreate:true,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id,",
						"          order_id,",
						"          cust_id,",
						"          item_id,",
						"          qty_ordered,",
						"          total,",
						"          date_id,",
						"          region_id",
						"     )) ~> UploadingToSql"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sales_SQL')]",
				"[concat(variables('factoryId'), '/datasets/FactTable')]"
			]
		}
	]
}